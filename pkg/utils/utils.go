package utils

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"github.com/yekongxingle/discord-chatbot/pkg/resStruct"
	"github.com/yekongxingle/discord-chatbot/pkg/setting"
	"io/ioutil"
	"log"
	"math/rand"
	"net/http"
	"net/url"
	"strconv"
	"time"
)
var Parse *url.URL
var err error
var Client http.Client

func init()  {
	Parse, err = url.Parse("http://127.0.0.1:7890")
	if err != nil {
		log.Println(err)
	}
	Client = http.Client{
		Transport: &http.Transport{
			Proxy: http.ProxyURL(Parse),
		},
	}
}
func Get_context(chaturl string) []byte {
	//创建请求
	request, err := http.NewRequest("GET", chaturl, nil)
	if err != nil {
		log.Println(err)
	}
	request.Header.Set("Authorization", setting.Conf.Authorization)
	request.Header.Set("Content-Type", "application/json")
	request.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36")

	response, err := Client.Do(request)
	if err != nil {
		log.Println(err)
	}
	defer response.Body.Close()
	bytes, err := ioutil.ReadAll(response.Body)
	if err != nil {
		log.Println(err)
	}
	return bytes
}
func CheckSafe(res resStruct.AutoGenerated) error {
	for _,response:=range res{
		if response.Type==19{
			if response.Mentions[0].Username==setting.Conf.Username{
				fmt.Println(response.Author.Username,"找你，消息是：",response.Content)
				return errors.New("被cue了")
			}
		}
	}
	return nil
}
func PostMessage(res resStruct.AutoGenerated)  {
	lenth:=len(res)
	rand.Seed(time.Now().UnixNano())
	nonce := strconv.Itoa(int(rand.Uint32()))
	data := make(map[string]interface{})
	data["content"] = res[lenth-1].Content
	data["nonce"] = nonce //每个请求都必须是不同的nonce
	data["tts"] = false
	bytesData, err := json.Marshal(data)
	if err != nil {
		log.Println(err)
	}
	reader := bytes.NewReader(bytesData)
	request, err := http.NewRequest("POST", setting.Conf.Posturl, reader)
	if err != nil {
		log.Println(err)
	}
	request.Header.Set("Authorization", setting.Conf.Authorization)
	request.Header.Set("Content-Type", "application/json")
	request.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36")
	_, err = Client.Do(request)
	if err != nil {
		log.Println(err)
	}
}
